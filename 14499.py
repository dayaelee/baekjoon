'''

지도의 오른쪽이 동쪽 윗쪽이 북쪽 

주사위 전개도 
  2
4 1 3
  5
  6

지도의 좌표는 (r, c) r은 북쪽으로부터 떨어진 칸의 개수, c는 서쪽으로부터 떨어진 칸의 개수 

주사위는 지도 위에 윗 면이 1이고, 
동쪽을 바라보는 방향이 3인 상태로 놓여져 있으며, 
놓여져 있는 곳의 좌표는 (x, y) 

가장 처음에 주사위에는 모든 면에 0이 적혀져 있다.

지도의 각 칸에는 정수가 하나씩 쓰여져 있다. 
주사위를 굴렸을 때, 이동한 칸에 쓰여 있는 수가 0이면, 
주사위의 바닥면에 쓰여 있는 수가 칸에 복사된다. => 주사위의 수가 바닥에 복사됨
0이 아닌 경우에는 칸에 쓰여 있는 수가 주사위의 바닥면으로 복사되며, 칸에 쓰여 있는 수는 0이 된다.

주사위를 놓은 곳의 좌표와 이동시키는 명령이 주어졌을 때, 
주사위가 이동했을 때 마다 상단에 쓰여 있는 값을 구하는 프로그램을 작성하시오.

주사위는 지도의 바깥으로 이동시킬 수 없다. 
만약 바깥으로 이동시키려고 하는 경우에는 해당 명령을 무시해야 하며, 출력도 하면 안 된다.

'''
''''
[1], 2, [6], 5 -> 북쪽 방향 3
[1], 5, [6], 2 -> 남쪽 방향 4
[1], 3, [6], 4 -> 동쪽 방향 1
[1], 4, [6], 3 -> 서쪽 방향 2

1, 2, 3, 4, 5, 6
0  0  0  0  0  0
'''

import sys
input = sys.stdin.readline
n, m, y, x, k = map(int, input().split())
mapp=[]
for i in range(n):
    tmp = list(map(int, input().split()))
    mapp.append(tmp)

dir = list(map(int, input().split()))

n1=n2=n3=n4=n5=n6=0 # 초기 주사위 면은 모두 0
di, dj = [0, 0, 0, -1, 1], [0, 1, -1, 0, 0] # 동서북남

# 명령방향대로 이동 후 처리

result = []
for i in dir:
    ni, nj = y + di[i], x + dj[i]

    if ni <0 or nj<0 or ni>=n or nj>=m:
        continue
    
    # 주사위 굴리기 
    if i ==1: # 동
        n1, n3, n4, n6 = n4, n1, n6, n3
    elif i ==2: # 서
        n1, n3, n4, n6 = n3, n6, n1, n4
    elif i ==3: # 북
        n1, n2, n5, n6 = n5, n1, n6, n2
    else: # 남
        n1, n2, n5, n6 = n2, n6, n1, n5

    if mapp[ni][nj] == 0:
        mapp[ni][nj]=n6
    else:
        n6=mapp[ni][nj]
        mapp[ni][nj]=0

    result.append(n1) # 윗면의 값을 result에 추가 
    # 실제 이동 처리 
    y = ni
    x = nj

print(*result, sep='\n')

